// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package espv2.api.envoy.v9.http.path_matcher;

import "api/envoy/v9/http/common/base.proto";
import "validate/validate.proto";

message PathMatcherRule {
  // The pattern used to match a HTTP request.
  espv2.api.envoy.v9.http.common.Pattern pattern = 1;

  // Operation name (selector) used as a unique ID for the operation.
  string operation = 2 [(validate.rules).string.min_bytes = 1];

  // If set, the path parameters in the `pattern` must be extracted. Ref:
  // https://cloud.google.com/endpoints/docs/openapi/openapi-extensions#understanding_path_translation
  PathParameterExtractionRule path_parameter_extraction = 3;
}

message PathParameterExtractionRule {
  // Each rule has a mapping of snake_case segments to jsonCase segments.
  // If the map is empty, the path params still need to be extracted.
  map<string, string> snake_to_json_segments = 2;
}

message FilterConfig {
  repeated PathMatcherRule rules = 1;
}
