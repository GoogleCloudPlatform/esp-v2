{
  "admin": {},
  "layeredRuntime": {
    "layers": [
      {
        "name": "deprecation",
        "staticLayer": {
          "re2.max_program_size.error_level": 1000
        }
      }
    ]
  },
  "node": {
    "cluster": "ESPv2_cluster",
    "id": "ESPv2"
  },
  "staticResources": {
    "clusters": [
      {
        "connectTimeout": "20s",
        "http2ProtocolOptions": {},
        "loadAssignment": {
          "clusterName": "127.0.0.1",
          "endpoints": [
            {
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "127.0.0.1",
                        "portValue": 8082
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "name": "examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app_local",
        "type": "LOGICAL_DNS"
      },
      {
        "connectTimeout": "20s",
        "loadAssignment": {
          "clusterName": "169.254.169.254",
          "endpoints": [
            {
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "169.254.169.254",
                        "portValue": 80
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "name": "metadata-cluster",
        "type": "STRICT_DNS"
      },
      {
        "connectTimeout": "5s",
        "dnsLookupFamily": "V4_ONLY",
        "loadAssignment": {
          "clusterName": "servicecontrol.googleapis.com",
          "endpoints": [
            {
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "servicecontrol.googleapis.com",
                        "portValue": 443
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "name": "service-control-cluster",
        "transportSocket": {
          "name": "envoy.transport_sockets.tls",
          "typedConfig": {
            "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
            "commonTlsContext": {
              "validationContext": {
                "trustedCa": {
                  "filename": "/etc/ssl/certs/ca-certificates.crt"
                }
              }
            },
            "sni": "servicecontrol.googleapis.com"
          }
        },
        "type": "LOGICAL_DNS"
      },
      {
        "connectTimeout": "20s",
        "http2ProtocolOptions": {},
        "loadAssignment": {
          "clusterName": "grpc-echo-oxouww7xzq-uc.a.run.app",
          "endpoints": [
            {
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "grpc-echo-oxouww7xzq-uc.a.run.app",
                        "portValue": 443
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "name": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
        "transportSocket": {
          "name": "envoy.transport_sockets.tls",
          "typedConfig": {
            "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
            "commonTlsContext": {
              "alpnProtocols": [
                "h2"
              ],
              "validationContext": {
                "trustedCa": {
                  "filename": "/etc/ssl/certs/ca-certificates.crt"
                }
              }
            },
            "sni": "grpc-echo-oxouww7xzq-uc.a.run.app"
          }
        },
        "type": "LOGICAL_DNS"
      },
      {
        "connectTimeout": "20s",
        "dnsLookupFamily": "V4_ONLY",
        "loadAssignment": {
          "clusterName": "www.googleapis.com",
          "endpoints": [
            {
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "www.googleapis.com",
                        "portValue": 443
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "name": "www.googleapis.com:443",
        "transportSocket": {
          "name": "envoy.transport_sockets.tls",
          "typedConfig": {
            "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
            "commonTlsContext": {
              "validationContext": {
                "trustedCa": {
                  "filename": "/etc/ssl/certs/ca-certificates.crt"
                }
              }
            },
            "sni": "www.googleapis.com"
          }
        },
        "type": "LOGICAL_DNS"
      }
    ],
    "listeners": [
      {
        "address": {
          "socketAddress": {
            "address": "0.0.0.0",
            "portValue": 8080
          }
        },
        "filterChains": [
          {
            "filters": [
              {
                "name": "envoy.filters.network.http_connection_manager",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                  "commonHttpProtocolOptions": {
                    "headersWithUnderscoresAction": "REJECT_REQUEST"
                  },
                  "httpFilters": [
                    {
                      "name": "com.google.espv2.filters.http.path_matcher",
                      "typedConfig": {
                        "@type": "type.googleapis.com/espv2.api.envoy.v8.http.path_matcher.FilterConfig",
                        "rules": [
                          {
                            "operation": "test.grpc.Test.Cork",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/test.grpc.Test/Cork"
                            }
                          },
                          {
                            "operation": "test.grpc.Test.Echo",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/echo"
                            }
                          },
                          {
                            "operation": "test.grpc.Test.Echo",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/test.grpc.Test/Echo"
                            }
                          },
                          {
                            "operation": "test.grpc.Test.EchoReport",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/echoreport"
                            }
                          },
                          {
                            "operation": "test.grpc.Test.EchoReport",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/test.grpc.Test/EchoReport"
                            }
                          },
                          {
                            "operation": "test.grpc.Test.EchoStream",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/echostream"
                            }
                          },
                          {
                            "operation": "test.grpc.Test.EchoStream",
                            "pattern": {
                              "httpMethod": "POST",
                              "uriTemplate": "/test.grpc.Test/EchoStream"
                            }
                          }
                        ],
                        "segmentNames": [
                          {
                            "jsonName": "typeUrl",
                            "snakeName": "type_url"
                          },
                          {
                            "jsonName": "nullValue",
                            "snakeName": "null_value"
                          },
                          {
                            "jsonName": "numberValue",
                            "snakeName": "number_value"
                          },
                          {
                            "jsonName": "stringValue",
                            "snakeName": "string_value"
                          },
                          {
                            "jsonName": "boolValue",
                            "snakeName": "bool_value"
                          },
                          {
                            "jsonName": "structValue",
                            "snakeName": "struct_value"
                          },
                          {
                            "jsonName": "listValue",
                            "snakeName": "list_value"
                          },
                          {
                            "jsonName": "insertId",
                            "snakeName": "insert_id"
                          },
                          {
                            "jsonName": "protoPayload",
                            "snakeName": "proto_payload"
                          },
                          {
                            "jsonName": "textPayload",
                            "snakeName": "text_payload"
                          },
                          {
                            "jsonName": "structPayload",
                            "snakeName": "struct_payload"
                          },
                          {
                            "jsonName": "sumOfSquaredDeviation",
                            "snakeName": "sum_of_squared_deviation"
                          },
                          {
                            "jsonName": "bucketCounts",
                            "snakeName": "bucket_counts"
                          },
                          {
                            "jsonName": "linearBuckets",
                            "snakeName": "linear_buckets"
                          },
                          {
                            "jsonName": "exponentialBuckets",
                            "snakeName": "exponential_buckets"
                          },
                          {
                            "jsonName": "explicitBuckets",
                            "snakeName": "explicit_buckets"
                          },
                          {
                            "jsonName": "numFiniteBuckets",
                            "snakeName": "num_finite_buckets"
                          },
                          {
                            "jsonName": "growthFactor",
                            "snakeName": "growth_factor"
                          },
                          {
                            "jsonName": "startTime",
                            "snakeName": "start_time"
                          },
                          {
                            "jsonName": "endTime",
                            "snakeName": "end_time"
                          },
                          {
                            "jsonName": "int64Value",
                            "snakeName": "int64_value"
                          },
                          {
                            "jsonName": "doubleValue",
                            "snakeName": "double_value"
                          },
                          {
                            "jsonName": "distributionValue",
                            "snakeName": "distribution_value"
                          },
                          {
                            "jsonName": "metricName",
                            "snakeName": "metric_name"
                          },
                          {
                            "jsonName": "metricValues",
                            "snakeName": "metric_values"
                          },
                          {
                            "jsonName": "operationId",
                            "snakeName": "operation_id"
                          },
                          {
                            "jsonName": "operationName",
                            "snakeName": "operation_name"
                          },
                          {
                            "jsonName": "consumerId",
                            "snakeName": "consumer_id"
                          },
                          {
                            "jsonName": "metricValueSets",
                            "snakeName": "metric_value_sets"
                          },
                          {
                            "jsonName": "logEntries",
                            "snakeName": "log_entries"
                          },
                          {
                            "jsonName": "serviceName",
                            "snakeName": "service_name"
                          },
                          {
                            "jsonName": "serviceConfigId",
                            "snakeName": "service_config_id"
                          },
                          {
                            "jsonName": "returnStatus",
                            "snakeName": "return_status"
                          },
                          {
                            "jsonName": "randomPayloadMaxSize",
                            "snakeName": "random_payload_max_size"
                          },
                          {
                            "jsonName": "spacePayloadSize",
                            "snakeName": "space_payload_size"
                          },
                          {
                            "jsonName": "responseDelay",
                            "snakeName": "response_delay"
                          },
                          {
                            "jsonName": "returnInitialMetadata",
                            "snakeName": "return_initial_metadata"
                          },
                          {
                            "jsonName": "returnTrailingMetadata",
                            "snakeName": "return_trailing_metadata"
                          },
                          {
                            "jsonName": "elapsedMicros",
                            "snakeName": "elapsed_micros"
                          },
                          {
                            "jsonName": "receivedMetadata",
                            "snakeName": "received_metadata"
                          },
                          {
                            "jsonName": "currentCorkedCalls",
                            "snakeName": "current_corked_calls"
                          }
                        ]
                      }
                    },
                    {
                      "name": "envoy.filters.http.jwt_authn",
                      "typedConfig": {
                        "@type": "type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication",
                        "filterStateRules": {
                          "name": "com.google.espv2.filters.http.path_matcher.operation",
                          "requires": {
                            "test.grpc.Test.EchoStream": {
                              "providerName": "test_jwk"
                            }
                          }
                        },
                        "providers": {
                          "test_jwk": {
                            "audiences": [
                              "https://examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app"
                            ],
                            "forward": true,
                            "forwardPayloadHeader": "X-Endpoint-API-UserInfo",
                            "fromHeaders": [
                              {
                                "name": "Authorization",
                                "valuePrefix": "Bearer "
                              },
                              {
                                "name": "X-Goog-Iap-Jwt-Assertion"
                              }
                            ],
                            "fromParams": [
                              "access_token"
                            ],
                            "issuer": "e2e-client-jwk@cloudesf-testing.iam.gserviceaccount.com",
                            "payloadInMetadata": "jwt_payloads",
                            "remoteJwks": {
                              "cacheDuration": "300s",
                              "httpUri": {
                                "cluster": "www.googleapis.com:443",
                                "timeout": "30s",
                                "uri": "https://www.googleapis.com/service_accounts/v1/jwk/e2e-client-jwk@cloudesf-testing.iam.gserviceaccount.com"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "com.google.espv2.filters.http.service_control",
                      "typedConfig": {
                        "@type": "type.googleapis.com/espv2.api.envoy.v8.http.service_control.FilterConfig",
                        "generatedHeaderPrefix": "X-Endpoint-",
                        "imdsToken": {
                          "cluster": "metadata-cluster",
                          "timeout": "30s",
                          "uri": "http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token"
                        },
                        "requirements": [
                          {
                            "apiName": "test.grpc.Test",
                            "apiVersion": "v1",
                            "operationName": "test.grpc.Test.Cork",
                            "serviceName": "examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app"
                          },
                          {
                            "apiKey": {
                              "allowWithoutApiKey": true
                            },
                            "apiName": "test.grpc.Test",
                            "apiVersion": "v1",
                            "operationName": "test.grpc.Test.Echo",
                            "serviceName": "examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app"
                          },
                          {
                            "apiName": "test.grpc.Test",
                            "apiVersion": "v1",
                            "operationName": "test.grpc.Test.EchoReport",
                            "serviceName": "examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app"
                          },
                          {
                            "apiName": "test.grpc.Test",
                            "apiVersion": "v1",
                            "operationName": "test.grpc.Test.EchoStream",
                            "serviceName": "examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app"
                          }
                        ],
                        "scCallingConfig": {
                          "networkFailOpen": true
                        },
                        "serviceControlUri": {
                          "cluster": "service-control-cluster",
                          "timeout": "30s",
                          "uri": "https://servicecontrol.googleapis.com/v1/services"
                        },
                        "services": [
                          {
                            "backendProtocol": "grpc",
                            "jwtPayloadMetadataName": "jwt_payloads",
                            "producerProjectId": "cloudesf-testing",
                            "serviceConfig": {
                              "logging": {
                                "producerDestinations": [
                                  {
                                    "logs": [
                                      "endpoints_log"
                                    ],
                                    "monitoredResource": "api"
                                  }
                                ]
                              },
                              "logs": [
                                {
                                  "name": "endpoints_log"
                                }
                              ],
                              "metrics": [
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/protocol"
                                    },
                                    {
                                      "key": "/response_code"
                                    },
                                    {
                                      "key": "/response_code_class"
                                    },
                                    {
                                      "key": "/status_code"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/request_count",
                                  "type": "serviceruntime.googleapis.com/api/consumer/request_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/error_type"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/error_count",
                                  "type": "serviceruntime.googleapis.com/api/consumer/error_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/total_latencies",
                                  "type": "serviceruntime.googleapis.com/api/consumer/total_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/protocol"
                                    },
                                    {
                                      "key": "/response_code"
                                    },
                                    {
                                      "key": "/response_code_class"
                                    },
                                    {
                                      "key": "/status_code"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/request_count",
                                  "type": "serviceruntime.googleapis.com/api/producer/request_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/error_type"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/error_count",
                                  "type": "serviceruntime.googleapis.com/api/producer/error_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/total_latencies",
                                  "type": "serviceruntime.googleapis.com/api/producer/total_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/end_user"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/top_request_count_by_end_user",
                                  "type": "serviceruntime.googleapis.com/api/consumer/top_request_count_by_end_user",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/end_user_country"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/top_request_count_by_end_user_country",
                                  "type": "serviceruntime.googleapis.com/api/consumer/top_request_count_by_end_user_country",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/referer"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/top_request_count_by_referer",
                                  "type": "serviceruntime.googleapis.com/api/consumer/top_request_count_by_referer",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/protocol"
                                    },
                                    {
                                      "key": "/response_code"
                                    },
                                    {
                                      "key": "/consumer_id"
                                    },
                                    {
                                      "key": "/status_code"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/top_request_count_by_consumer",
                                  "type": "serviceruntime.googleapis.com/api/producer/top_request_count_by_consumer",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/quota_group_name"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/quota_used_count",
                                  "type": "serviceruntime.googleapis.com/api/consumer/quota_used_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/request_overhead_latencies",
                                  "type": "serviceruntime.googleapis.com/api/consumer/request_overhead_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/backend_latencies",
                                  "type": "serviceruntime.googleapis.com/api/consumer/backend_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/request_sizes",
                                  "type": "serviceruntime.googleapis.com/api/consumer/request_sizes",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/response_sizes",
                                  "type": "serviceruntime.googleapis.com/api/consumer/response_sizes",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/request_overhead_latencies",
                                  "type": "serviceruntime.googleapis.com/api/producer/request_overhead_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/backend_latencies",
                                  "type": "serviceruntime.googleapis.com/api/producer/backend_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/request_sizes",
                                  "type": "serviceruntime.googleapis.com/api/producer/request_sizes",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/response_sizes",
                                  "type": "serviceruntime.googleapis.com/api/producer/response_sizes",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/consumer_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/top_request_sizes_by_consumer",
                                  "type": "serviceruntime.googleapis.com/api/producer/top_request_sizes_by_consumer",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/consumer_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/top_response_sizes_by_consumer",
                                  "type": "serviceruntime.googleapis.com/api/producer/top_response_sizes_by_consumer",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/protocol"
                                    },
                                    {
                                      "key": "/response_code"
                                    },
                                    {
                                      "key": "/response_code_class"
                                    },
                                    {
                                      "key": "/status_code"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/request_count",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/request_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/error_type"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/error_count",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/error_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/total_latencies",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/total_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    },
                                    {
                                      "key": "/quota_group_name"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/quota_used_count",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/quota_used_count",
                                  "valueType": "INT64"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/request_overhead_latencies",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/request_overhead_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/backend_latencies",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/backend_latencies",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/request_sizes",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/request_sizes",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "labels": [
                                    {
                                      "key": "/credential_id"
                                    }
                                  ],
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/by_consumer/response_sizes",
                                  "type": "serviceruntime.googleapis.com/api/producer/by_consumer/response_sizes",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/streaming_request_message_counts",
                                  "type": "serviceruntime.googleapis.com/api/producer/streaming_request_message_counts",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/streaming_response_message_counts",
                                  "type": "serviceruntime.googleapis.com/api/producer/streaming_response_message_counts",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/streaming_request_message_counts",
                                  "type": "serviceruntime.googleapis.com/api/consumer/streaming_request_message_counts",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/streaming_response_message_counts",
                                  "type": "serviceruntime.googleapis.com/api/consumer/streaming_response_message_counts",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/streaming_durations",
                                  "type": "serviceruntime.googleapis.com/api/producer/streaming_durations",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/streaming_durations",
                                  "type": "serviceruntime.googleapis.com/api/consumer/streaming_durations",
                                  "valueType": "DISTRIBUTION"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/request_bytes",
                                  "type": "serviceruntime.googleapis.com/api/producer/request_bytes",
                                  "valueType": "INT64"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/producer/response_bytes",
                                  "type": "serviceruntime.googleapis.com/api/producer/response_bytes",
                                  "valueType": "INT64"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/request_bytes",
                                  "type": "serviceruntime.googleapis.com/api/consumer/request_bytes",
                                  "valueType": "INT64"
                                },
                                {
                                  "metricKind": "DELTA",
                                  "name": "serviceruntime.googleapis.com/api/consumer/response_bytes",
                                  "type": "serviceruntime.googleapis.com/api/consumer/response_bytes",
                                  "valueType": "INT64"
                                }
                              ],
                              "monitoredResources": [
                                {
                                  "labels": [
                                    {
                                      "key": "cloud.googleapis.com/location"
                                    },
                                    {
                                      "key": "cloud.googleapis.com/uid"
                                    },
                                    {
                                      "key": "serviceruntime.googleapis.com/api_version"
                                    },
                                    {
                                      "key": "serviceruntime.googleapis.com/api_method"
                                    },
                                    {
                                      "key": "serviceruntime.googleapis.com/consumer_project"
                                    },
                                    {
                                      "key": "cloud.googleapis.com/project"
                                    },
                                    {
                                      "key": "cloud.googleapis.com/service"
                                    }
                                  ],
                                  "type": "api"
                                }
                              ],
                              "monitoring": {
                                "consumerDestinations": [
                                  {
                                    "metrics": [
                                      "serviceruntime.googleapis.com/api/consumer/request_count",
                                      "serviceruntime.googleapis.com/api/consumer/error_count",
                                      "serviceruntime.googleapis.com/api/consumer/quota_used_count",
                                      "serviceruntime.googleapis.com/api/consumer/total_latencies",
                                      "serviceruntime.googleapis.com/api/consumer/request_overhead_latencies",
                                      "serviceruntime.googleapis.com/api/consumer/backend_latencies",
                                      "serviceruntime.googleapis.com/api/consumer/request_sizes",
                                      "serviceruntime.googleapis.com/api/consumer/response_sizes",
                                      "serviceruntime.googleapis.com/api/consumer/top_request_count_by_end_user",
                                      "serviceruntime.googleapis.com/api/consumer/top_request_count_by_end_user_country",
                                      "serviceruntime.googleapis.com/api/consumer/top_request_count_by_referer",
                                      "serviceruntime.googleapis.com/api/consumer/streaming_request_message_counts",
                                      "serviceruntime.googleapis.com/api/consumer/streaming_response_message_counts",
                                      "serviceruntime.googleapis.com/api/consumer/streaming_durations",
                                      "serviceruntime.googleapis.com/api/consumer/request_bytes",
                                      "serviceruntime.googleapis.com/api/consumer/response_bytes"
                                    ],
                                    "monitoredResource": "api"
                                  }
                                ],
                                "producerDestinations": [
                                  {
                                    "metrics": [
                                      "serviceruntime.googleapis.com/api/producer/request_count",
                                      "serviceruntime.googleapis.com/api/producer/error_count",
                                      "serviceruntime.googleapis.com/api/producer/total_latencies",
                                      "serviceruntime.googleapis.com/api/producer/request_overhead_latencies",
                                      "serviceruntime.googleapis.com/api/producer/backend_latencies",
                                      "serviceruntime.googleapis.com/api/producer/request_sizes",
                                      "serviceruntime.googleapis.com/api/producer/response_sizes",
                                      "serviceruntime.googleapis.com/api/producer/top_request_count_by_consumer",
                                      "serviceruntime.googleapis.com/api/producer/top_request_sizes_by_consumer",
                                      "serviceruntime.googleapis.com/api/producer/top_response_sizes_by_consumer",
                                      "serviceruntime.googleapis.com/api/producer/streaming_request_message_counts",
                                      "serviceruntime.googleapis.com/api/producer/streaming_response_message_counts",
                                      "serviceruntime.googleapis.com/api/producer/streaming_durations",
                                      "serviceruntime.googleapis.com/api/producer/request_bytes",
                                      "serviceruntime.googleapis.com/api/producer/response_bytes",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/request_count",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/error_count",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/total_latencies",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/quota_used_count",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/request_overhead_latencies",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/backend_latencies",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/request_sizes",
                                      "serviceruntime.googleapis.com/api/producer/by_consumer/response_sizes"
                                    ],
                                    "monitoredResource": "api"
                                  }
                                ]
                              }
                            },
                            "serviceConfigId": "2019-12-16r0",
                            "serviceName": "examples-grpc-dynamic-routing-wd6ufmzfya-uc.a.run.app"
                          }
                        ]
                      }
                    },
                    {
                      "name": "envoy.filters.http.grpc_web"
                    },
                    {
                      "name": "envoy.filters.http.grpc_json_transcoder",
                      "typedConfig": {
                        "@type": "type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder",
                        "autoMapping": true,
                        "convertGrpcStatus": true,
                        "ignoredQueryParameters": [
                          "access_token",
                          "api_key",
                          "key"
                        ],
                        "printOptions": {},
                        "protoDescriptorBin": "",
                        "services": [
                          "test.grpc.Test"
                        ]
                      }
                    },
                    {
                      "name": "com.google.espv2.filters.http.backend_auth",
                      "typedConfig": {
                        "@type": "type.googleapis.com/espv2.api.envoy.v8.http.backend_auth.FilterConfig",
                        "imdsToken": {
                          "cluster": "metadata-cluster",
                          "timeout": "30s",
                          "uri": "http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/identity"
                        },
                        "rules": [
                          {
                            "jwtAudience": "https://grpc-echo-oxouww7xzq-uc.a.run.app",
                            "operation": "test.grpc.Test.Cork"
                          },
                          {
                            "jwtAudience": "https://grpc-echo-oxouww7xzq-uc.a.run.app",
                            "operation": "test.grpc.Test.Echo"
                          },
                          {
                            "jwtAudience": "https://grpc-echo-oxouww7xzq-uc.a.run.app",
                            "operation": "test.grpc.Test.EchoReport"
                          },
                          {
                            "jwtAudience": "https://grpc-echo-oxouww7xzq-uc.a.run.app",
                            "operation": "test.grpc.Test.EchoStream"
                          }
                        ]
                      }
                    },
                    {
                      "name": "envoy.filters.http.router",
                      "typedConfig": {
                        "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router",
                        "suppressEnvoyHeaders": true
                      }
                    }
                  ],
                  "localReplyConfig": {
                    "bodyFormat": {
                      "jsonFormat": {
                        "code": "%RESPONSE_CODE%",
                        "message": "%LOCAL_REPLY_BODY%"
                      }
                    }
                  },
                  "routeConfig": {
                    "name": "local_route",
                    "virtualHosts": [
                      {
                        "domains": [
                          "*"
                        ],
                        "name": "backend",
                        "routes": [
                          {
                            "decorator": {
                              "operation": "ingress Cork"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/test.grpc.Test/Cork"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "0s"
                            }
                          },
                          {
                            "decorator": {
                              "operation": "ingress Echo"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/echo"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "300s"
                            }
                          },
                          {
                            "decorator": {
                              "operation": "ingress Echo"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/test.grpc.Test/Echo"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "300s"
                            }
                          },
                          {
                            "decorator": {
                              "operation": "ingress EchoReport"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/echoreport"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "300s"
                            }
                          },
                          {
                            "decorator": {
                              "operation": "ingress EchoReport"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/test.grpc.Test/EchoReport"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "300s"
                            }
                          },
                          {
                            "decorator": {
                              "operation": "ingress EchoStream"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/echostream"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "0s"
                            }
                          },
                          {
                            "decorator": {
                              "operation": "ingress EchoStream"
                            },
                            "match": {
                              "headers": [
                                {
                                  "exactMatch": "POST",
                                  "name": ":method"
                                }
                              ],
                              "path": "/test.grpc.Test/EchoStream"
                            },
                            "route": {
                              "cluster": "grpc-echo-oxouww7xzq-uc.a.run.app:443",
                              "hostRewriteLiteral": "grpc-echo-oxouww7xzq-uc.a.run.app",
                              "timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "statPrefix": "ingress_http",
                  "upgradeConfigs": [
                    {
                      "upgradeType": "websocket"
                    }
                  ],
                  "useRemoteAddress": false,
                  "xffNumTrustedHops": 2
                }
              }
            ]
          }
        ],
        "name": "ingress_listener"
      }
    ]
  }
}
