# Placeholder file for Prow

# Required by envoy and its tests
build --define=grpc_no_ares=true

# Required by envoy and grpc-echo
build --incompatible_disable_deprecated_attr_params=false
query --incompatible_disable_deprecated_attr_params=false

# Compile a Position Independent Executable
# Ref: github.com/envoyproxy/envoy#8792
build --copt=-fPIC

# Show timestamps during compiling
build --show_timestamps

# Compilation modes
build:release -c opt
build:debug -c dbg

build --experimental_local_memory_estimate
build --experimental_strict_action_env=true
build --host_force_python=PY2
build --action_env=BAZEL_LINKLIBS=-l%:libstdc++.a
build --action_env=BAZEL_LINKOPTS=-lm

# We already have absl in the build, define absl=1 to tell googletest to use absl for backtrace.
build --define absl=1

# Pass PATH, CC and CXX variables from the environment.
build --action_env=CC
build --action_env=CXX
build --action_env=PATH

# Common flags for sanitizers
build:sanitizer --define tcmalloc=disabled
build:sanitizer --linkopt -ldl
build:sanitizer --build_tag_filters=-no_san
build:sanitizer --test_tag_filters=-no_san

# Common flags for Clang
build:clang --action_env=BAZEL_COMPILER=clang
build:clang --linkopt=-fuse-ld=lld

# Compile with the Scudo allocator
# https://llvm.org/docs/ScudoHardenedAllocator.html
build:clang --copt -fsanitize=scudo

# Compile with automatic variable initialization
# https://reviews.llvm.org/rL349442
build:clang --copt -ftrivial-auto-var-init=pattern

# Compilation modes
build:clang-release --config=clang
build:clang-release --config=release

# Basic ASAN/UBSAN that works for gcc
build:asan --config=sanitizer
build:asan --config=debug
# ASAN install its signal handler, disable ours so the stacktrace will be printed by ASAN
build:asan --define signal_trace=disabled
build:asan --define ENVOY_CONFIG_ASAN=1
build:asan --copt -fsanitize=address,undefined
build:asan --linkopt -fsanitize=address,undefined


build:asan --copt -DADDRESS_SANITIZER=1
build:asan --copt -D__SANITIZE_ADDRESS__
build:asan --test_env=ASAN_OPTIONS=handle_abort=1:allow_addr2line=true:check_initialization_order=true:strict_init_order=true:detect_odr_violation=1
build:asan --test_env=UBSAN_OPTIONS=halt_on_error=true:print_stacktrace=1
build:asan --test_env=ASAN_SYMBOLIZER_PATH

build:clang-asan --config=asan
build:clang-asan --linkopt -fuse-ld=lld
build:clang-asan --copt -fno-sanitize=vptr,function
build:clang-asan --linkopt -fno-sanitize=vptr,function
build:clang-asan --copt -fno-optimize-sibling-calls
build:clang-asan --copt -fno-omit-frame-pointer


build:asan --config=debug
build:clang-tsan --config=sanitizer
build:clang-tsan --define ENVOY_CONFIG_TSAN=1
build:clang-tsan --copt -fsanitize=thread
build:clang-tsan --linkopt -fsanitize=thread
build:clang-tsan --copt -DEVENT__DISABLE_DEBUG_MODE

# Fuzz builds
build:asan-fuzzer --config=clang-asan
build:asan-fuzzer -c opt
build:asan-fuzzer --action_env=CC=clang-8
build:asan-fuzzer --action_env=CXX=clang++-8
build:asan-fuzzer --nocache_test_results
build:asan-fuzzer --define=FUZZING_ENGINE=libfuzzer
build:asan-fuzzer --copt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
build:asan-fuzzer --copt=-fsanitize=fuzzer-no-link
# Remove UBSAN halt_on_error to avoid crashing on protobuf errors.
build:asan-fuzzer --test_env=UBSAN_OPTIONS=print_stacktrace=1
