# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

admin:
  access_log_path: /tmp/envoy-access.log
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 20015
static_resources:
  clusters:
    - name: backend
      connect_timeout: 5s
      type: STATIC
      hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 8082
    - name: token_cluster
      connect_timeout: 5s
      type: STATIC
      hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 8790
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
    - name: service_control_cluster
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts:
        - socket_address:
            address: servicecontrol.googleapis.com
            port_value: 443
      tls_context: { sni: servicecontrol.googleapis.com }
  listeners:
    - name: server
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 9090
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              config:
                codec_type: AUTO
                stat_prefix: inbound_http
                access_log:
                  - name: envoy.file_access_log
                    config:
                      path: /tmp/envoy-access.log
                http_filters:
                  - name: envoy.filters.http.path_matcher
                    config:
                      rules:
                        - pattern:
                            uri_template: /test
                            http_method: GET
                          operation: "test"
                        - pattern:
                            uri_template: /test
                            http_method: POST
                          operation: "test"
                        - pattern:
                            uri_template: /endpoints.examples.bookstore.Bookstore/DeleteShelf
                            http_method: POST
                          operation: "DeleteShelf"
                  - name: envoy.filters.http.service_control
                    config:
                      services:
                        service_name: REPLACE_SERVICE_NAME
                        service_config_id: REPLACE_SERVICE_CONFIG_ID
                        producer_project_id: REPLACE_PROJECT_ID
                        token_cluster: token_cluster
                        service_control_uri:
                          cluster: service_control_cluster
                          uri: https://servicecontrol.googleapis.com/v1/services/
                          timeout:
                            seconds: 5
                      requirements:
                        - service_name: REPLACE_SERVICE_NAME
                          operation_name: "test"
                          api_key:
                            locations:
                              - query: "key"
                              - header: "x-api-key"
                              - cookie: "X-API-KEY"
                            allow_without_api_key: true
                          api_name: "Bookstore"
                          api_version: "1.0"
                        - service_name: REPLACE_SERVICE_NAME
                          operation_name: "DeleteShelf"
                          api_key:
                  - name: envoy.filters.http.router
                route_config:
                  name: backend
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: backend
                            timeout: 0s
